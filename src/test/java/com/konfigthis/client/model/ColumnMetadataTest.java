/*
 * Coalesce API
 * REST API for performing operations with the Coalesce backend.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.ColumnReference;
import com.konfigthis.client.model.HashMetadata;
import com.konfigthis.client.model.IntermediateColumnRefResult;
import com.konfigthis.client.model.VSourceColumnReference;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for ColumnMetadata
 */
public class ColumnMetadataTest {
    private final ColumnMetadata model = new ColumnMetadata();

    /**
     * Model tests for ColumnMetadata
     */
    @Test
    public void testColumnMetadata() {
        // TODO: test ColumnMetadata
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'appliedColumnTests'
     */
    @Test
    public void appliedColumnTestsTest() {
        // TODO: test appliedColumnTests
    }

    /**
     * Test the property 'columnID'
     */
    @Test
    public void columnIDTest() {
        // TODO: test columnID
    }

    /**
     * Test the property 'columnReferences'
     */
    @Test
    public void columnReferencesTest() {
        // TODO: test columnReferences
    }

    /**
     * Test the property 'config'
     */
    @Test
    public void configTest() {
        // TODO: test config
    }

    /**
     * Test the property 'dataType'
     */
    @Test
    public void dataTypeTest() {
        // TODO: test dataType
    }

    /**
     * Test the property 'defaultValue'
     */
    @Test
    public void defaultValueTest() {
        // TODO: test defaultValue
    }

    /**
     * Test the property 'hashDetails'
     */
    @Test
    public void hashDetailsTest() {
        // TODO: test hashDetails
    }

    /**
     * Test the property 'hashedColumns'
     */
    @Test
    public void hashedColumnsTest() {
        // TODO: test hashedColumns
    }

    /**
     * Test the property 'isBusinessKey'
     */
    @Test
    public void isBusinessKeyTest() {
        // TODO: test isBusinessKey
    }

    /**
     * Test the property 'isChangeTracking'
     */
    @Test
    public void isChangeTrackingTest() {
        // TODO: test isChangeTracking
    }

    /**
     * Test the property 'isSurrogateKey'
     */
    @Test
    public void isSurrogateKeyTest() {
        // TODO: test isSurrogateKey
    }

    /**
     * Test the property 'keyColumnType'
     */
    @Test
    public void keyColumnTypeTest() {
        // TODO: test keyColumnType
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nullable'
     */
    @Test
    public void nullableTest() {
        // TODO: test nullable
    }

    /**
     * Test the property 'primaryKey'
     */
    @Test
    public void primaryKeyTest() {
        // TODO: test primaryKey
    }

    /**
     * Test the property 'sources'
     */
    @Test
    public void sourcesTest() {
        // TODO: test sources
    }

    /**
     * Test the property 'systemColumnType'
     */
    @Test
    public void systemColumnTypeTest() {
        // TODO: test systemColumnType
    }

    /**
     * Test the property 'transform'
     */
    @Test
    public void transformTest() {
        // TODO: test transform
    }

    /**
     * Test the property 'uniqueKey'
     */
    @Test
    public void uniqueKeyTest() {
        // TODO: test uniqueKey
    }

}
