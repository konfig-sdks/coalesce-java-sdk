/*
 * Coalesce API
 * REST API for performing operations with the Coalesce backend.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EnvironmentHealth;
import com.konfigthis.client.model.TagColor;
import com.konfigthis.client.model.UserSummary;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Summary information about an environment.
 */
@ApiModel(description = "Summary information about an environment.")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EnvironmentSummary {
  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private UserSummary createdBy;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EnvironmentHealth status;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CONNECTION_ACCOUNT = "connectionAccount";
  @SerializedName(SERIALIZED_NAME_CONNECTION_ACCOUNT)
  private String connectionAccount;

  public static final String SERIALIZED_NAME_DEFAULT_STORAGE_MAPPING = "defaultStorageMapping";
  @SerializedName(SERIALIZED_NAME_DEFAULT_STORAGE_MAPPING)
  private String defaultStorageMapping;

  public static final String SERIALIZED_NAME_OAUTH_ENABLED = "oauthEnabled";
  @SerializedName(SERIALIZED_NAME_OAUTH_ENABLED)
  private Boolean oauthEnabled;

  public static final String SERIALIZED_NAME_RUN_TIME_PARAMETERS = "runTimeParameters";
  @SerializedName(SERIALIZED_NAME_RUN_TIME_PARAMETERS)
  private Map<String, Object> runTimeParameters = null;

  public static final String SERIALIZED_NAME_TAG_COLORS = "tagColors";
  @SerializedName(SERIALIZED_NAME_TAG_COLORS)
  private TagColor tagColors;

  public EnvironmentSummary() {
  }

  public EnvironmentSummary createdAt(OffsetDateTime createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public EnvironmentSummary createdBy(UserSummary createdBy) {
    
    
    
    
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserSummary getCreatedBy() {
    return createdBy;
  }


  public void setCreatedBy(UserSummary createdBy) {
    
    
    
    this.createdBy = createdBy;
  }


  public EnvironmentSummary id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public EnvironmentSummary name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public EnvironmentSummary project(String project) {
    
    
    
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProject() {
    return project;
  }


  public void setProject(String project) {
    
    
    
    this.project = project;
  }


  public EnvironmentSummary status(EnvironmentHealth status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EnvironmentHealth getStatus() {
    return status;
  }


  public void setStatus(EnvironmentHealth status) {
    
    
    
    this.status = status;
  }


  public EnvironmentSummary description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public EnvironmentSummary connectionAccount(String connectionAccount) {
    
    
    
    
    this.connectionAccount = connectionAccount;
    return this;
  }

   /**
   * Get connectionAccount
   * @return connectionAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getConnectionAccount() {
    return connectionAccount;
  }


  public void setConnectionAccount(String connectionAccount) {
    
    
    
    this.connectionAccount = connectionAccount;
  }


  public EnvironmentSummary defaultStorageMapping(String defaultStorageMapping) {
    
    
    
    
    this.defaultStorageMapping = defaultStorageMapping;
    return this;
  }

   /**
   * Get defaultStorageMapping
   * @return defaultStorageMapping
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDefaultStorageMapping() {
    return defaultStorageMapping;
  }


  public void setDefaultStorageMapping(String defaultStorageMapping) {
    
    
    
    this.defaultStorageMapping = defaultStorageMapping;
  }


  public EnvironmentSummary oauthEnabled(Boolean oauthEnabled) {
    
    
    
    
    this.oauthEnabled = oauthEnabled;
    return this;
  }

   /**
   * Get oauthEnabled
   * @return oauthEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getOauthEnabled() {
    return oauthEnabled;
  }


  public void setOauthEnabled(Boolean oauthEnabled) {
    
    
    
    this.oauthEnabled = oauthEnabled;
  }


  public EnvironmentSummary runTimeParameters(Map<String, Object> runTimeParameters) {
    
    
    
    
    this.runTimeParameters = runTimeParameters;
    return this;
  }

  public EnvironmentSummary putRunTimeParametersItem(String key, Object runTimeParametersItem) {
    if (this.runTimeParameters == null) {
      this.runTimeParameters = new HashMap<>();
    }
    this.runTimeParameters.put(key, runTimeParametersItem);
    return this;
  }

   /**
   * Get runTimeParameters
   * @return runTimeParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Map<String, Object> getRunTimeParameters() {
    return runTimeParameters;
  }


  public void setRunTimeParameters(Map<String, Object> runTimeParameters) {
    
    
    
    this.runTimeParameters = runTimeParameters;
  }


  public EnvironmentSummary tagColors(TagColor tagColors) {
    
    
    
    
    this.tagColors = tagColors;
    return this;
  }

   /**
   * Get tagColors
   * @return tagColors
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TagColor getTagColors() {
    return tagColors;
  }


  public void setTagColors(TagColor tagColors) {
    
    
    
    this.tagColors = tagColors;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EnvironmentSummary instance itself
   */
  public EnvironmentSummary putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvironmentSummary environmentSummary = (EnvironmentSummary) o;
    return Objects.equals(this.createdAt, environmentSummary.createdAt) &&
        Objects.equals(this.createdBy, environmentSummary.createdBy) &&
        Objects.equals(this.id, environmentSummary.id) &&
        Objects.equals(this.name, environmentSummary.name) &&
        Objects.equals(this.project, environmentSummary.project) &&
        Objects.equals(this.status, environmentSummary.status) &&
        Objects.equals(this.description, environmentSummary.description) &&
        Objects.equals(this.connectionAccount, environmentSummary.connectionAccount) &&
        Objects.equals(this.defaultStorageMapping, environmentSummary.defaultStorageMapping) &&
        Objects.equals(this.oauthEnabled, environmentSummary.oauthEnabled) &&
        Objects.equals(this.runTimeParameters, environmentSummary.runTimeParameters) &&
        Objects.equals(this.tagColors, environmentSummary.tagColors)&&
        Objects.equals(this.additionalProperties, environmentSummary.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, createdBy, id, name, project, status, description, connectionAccount, defaultStorageMapping, oauthEnabled, runTimeParameters, tagColors, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvironmentSummary {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    connectionAccount: ").append(toIndentedString(connectionAccount)).append("\n");
    sb.append("    defaultStorageMapping: ").append(toIndentedString(defaultStorageMapping)).append("\n");
    sb.append("    oauthEnabled: ").append(toIndentedString(oauthEnabled)).append("\n");
    sb.append("    runTimeParameters: ").append(toIndentedString(runTimeParameters)).append("\n");
    sb.append("    tagColors: ").append(toIndentedString(tagColors)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createdAt");
    openapiFields.add("createdBy");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("project");
    openapiFields.add("status");
    openapiFields.add("description");
    openapiFields.add("connectionAccount");
    openapiFields.add("defaultStorageMapping");
    openapiFields.add("oauthEnabled");
    openapiFields.add("runTimeParameters");
    openapiFields.add("tagColors");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EnvironmentSummary
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EnvironmentSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EnvironmentSummary is not found in the empty JSON string", EnvironmentSummary.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `createdBy`
      if (jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) {
        UserSummary.validateJsonObject(jsonObj.getAsJsonObject("createdBy"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) && !jsonObj.get("project").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("connectionAccount") != null && !jsonObj.get("connectionAccount").isJsonNull()) && !jsonObj.get("connectionAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `connectionAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("connectionAccount").toString()));
      }
      if ((jsonObj.get("defaultStorageMapping") != null && !jsonObj.get("defaultStorageMapping").isJsonNull()) && !jsonObj.get("defaultStorageMapping").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultStorageMapping` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultStorageMapping").toString()));
      }
      // validate the optional field `tagColors`
      if (jsonObj.get("tagColors") != null && !jsonObj.get("tagColors").isJsonNull()) {
        TagColor.validateJsonObject(jsonObj.getAsJsonObject("tagColors"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EnvironmentSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EnvironmentSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EnvironmentSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EnvironmentSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<EnvironmentSummary>() {
           @Override
           public void write(JsonWriter out, EnvironmentSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EnvironmentSummary read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EnvironmentSummary instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EnvironmentSummary given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EnvironmentSummary
  * @throws IOException if the JSON string is invalid with respect to EnvironmentSummary
  */
  public static EnvironmentSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EnvironmentSummary.class);
  }

 /**
  * Convert an instance of EnvironmentSummary to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

